{{=<% %>=}}

# ‚öôÔ∏è Generated by InfraBuddy ‚Äî github.com/alexindevs/infrabuddy

name: Build and Deploy (FastAPI)

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üîÑ Checkout code
        uses: actions/checkout@v3

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      <%#use_poetry%>
      - name: üì¶ Install dependencies with Poetry
        run: |
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-interaction --no-ansi
      <%/use_poetry%>

      <%#use_pip_runner%>
      - name: üì¶ Install dependencies with pip
        run: |
          pip install -r requirements.txt
      <%/use_pip_runner%>

      - name: üß™ Run tests
        run: |
          <%#use_poetry%>
          poetry run pytest || true
          <%/use_poetry%>
          <%#use_pip_runner%>
          pytest || true
          <%/use_pip_runner%>

      <%#is_dockerized%>
      - name: Write .env file from secrets
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - name: Build Docker image
        run: docker compose -f docker/compose.yml build --build-arg TAG=latest

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/<% project_name %>
          IMAGE_NAME=$(echo $IMAGE_NAME | tr '[:upper:]' '[:lower:]')
          docker push ${IMAGE_NAME}:latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      <%/is_dockerized%>

      <%#deploy_ssh%>
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_PATH }}
            <%#is_dockerized%>
            docker pull ${{ secrets.DOCKER_USERNAME }}/<% project_name %>:latest
            docker compose -f docker/compose.yml down
            docker compose -f docker/compose.yml up --build -d
            <%/is_dockerized%>
            <%^is_dockerized%>
            git pull
            <%#use_poetry%>
            poetry install --no-interaction --no-ansi
            <%/use_poetry%>
            <%#use_pip_runner%>
            pip install -r requirements.txt
            <%/use_pip_runner%>
            pm2 restart ${{ secrets.PM2_APP_NAME || 'app' }}
            <%/is_dockerized%>
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      <%/deploy_ssh%>
