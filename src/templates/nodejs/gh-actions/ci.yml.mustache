{{=<% %>=}}

# ‚öôÔ∏è Generated by InfraBuddy ‚Äî github.com/alexindevs/infrabuddy

name: Build and Test (Node.js)

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üîÑ Checkout code
        uses: actions/checkout@v3

      - name: üîß Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üõ†Ô∏è Build project
        run: npm run build

      - name: üß™ Run tests
        run: npm run test

      <%#is_dockerized%>
      - name: Write .env file from secrets
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - name: Build Docker image
        run: docker compose -f docker/compose.yml build --build-arg TAG=latest

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/<% project_name %>
          IMAGE_NAME=$(echo $IMAGE_NAME | tr '[:upper:]' '[:lower:]')
          docker push ${IMAGE_NAME}:latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      <%/is_dockerized%>

    <%#deploy_ssh%>
      - name: üì° Deploy to server via SSH
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_PATH }}
            <%#is_dockerized%>
            docker pull ${{ secrets.DOCKER_USERNAME }}/<% project_name %>:latest
            docker compose -f docker/compose.yml down
            docker compose -f docker/compose.yml up --build -d
            <%/is_dockerized%>
            <%^is_dockerized%>
            git pull
            poetry install --no-interaction --no-ansi

            <%#use_gunicorn%>
            echo "üî´ Running with Gunicorn"
            pkill -f gunicorn || true
            nohup gunicorn app.main:app --workers 4 --bind 0.0.0.0:8000 > gunicorn.log 2>&1 &
            <%/use_gunicorn%>

            <%#use_uvicorn%>
            echo "‚ö° Running with Uvicorn"
            pkill -f uvicorn || true
            nohup uvicorn app.main:app --host 0.0.0.0 --port 8000 > uvicorn.log 2>&1 &
            <%/use_uvicorn%>
  
            <%^use_gunicorn%><%^use_uvicorn%>
            echo "üì¶ Running with PM2 (default)"
            pm2 restart ${{ secrets.PM2_APP_NAME || 'app' }}
            <%/use_uvicorn%><%/use_gunicorn%>
            <%/is_dockerized%>
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    <%/deploy_ssh%>
